name: "⚡ Bug - Performance"
description: Problema de rendimiento o lentitud
labels: ["performance", "backend", "optimization", "type: bug", "status: backlog", "priority: planning"]
body:
  - type: markdown
    attributes:
      value: |
        Reporta lentitud o problemas de rendimiento. ¡Simple y rápido!

  - type: dropdown
    id: performance-area
    attributes:
      label: ¿Qué es lento?
      options:
        - API Response Time
        - Database Query
        - Memory/CPU
        - Startup Time
        - Other
    validations:
      required: true

  - type: textarea
    id: problem
    attributes:
      label: ¿Qué está lento?
      description: Endpoint, operación o proceso que tiene problemas
      placeholder: |
        GET /api/users tarda 5+ segundos con muchos usuarios
    validations:
      required: true

  - type: textarea
    id: metrics
    attributes:
      label: Métricas (opcional)
      description: Tiempos, uso de recursos, etc.
      placeholder: |
        - Response time: 5.2s (esperado <500ms)
        - Query time: 4.8s
        - 10,000 rows examined
    validations:
      required: false
      value: |
        - **Environment:** (development/staging/production)
        - **Node.js version:** 
        - **MySQL version:** 
        - **Server specs:** (CPU, RAM)
        - **Concurrent users:** 
        - **Data volume:** (number of records)
      placeholder: Completa la información del entorno
    validations:
      required: true

  - type: textarea
    id: reproduction-steps
    attributes:
      label: Pasos para reproducir el problema
      description: |
        ¿Cómo podemos reproducir el problema de performance?
      placeholder: |
        1. Poblar la base de datos con 10,000 usuarios
        2. Hacer 50 requests concurrentes a GET /api/users
        3. Observar el tiempo de respuesta excesivo
    validations:
      required: true

  - type: textarea
    id: suggested-solutions
    attributes:
      label: Posibles soluciones sugeridas
      description: |
        Si tienes ideas sobre cómo optimizar el rendimiento
      placeholder: |
        - Agregar índices en la tabla users (active, created_at)
        - Implementar paginación más eficiente
        - Usar cache Redis para consultas frecuentes
        - Optimizar la query eliminando JOINs innecesarios
    validations:
      required: false