name: "ðŸš€ Feature Request - Backend API"
description: Sugiere una nueva funcionalidad o mejora para la API backend
labels: ["enhancement", "backend", "api"]
body:
  - type: markdown
    attributes:
      value: |
        Â¡Gracias por tomarte el tiempo para sugerir una mejora para nuestra API backend!
        Por favor, proporciona detalles tÃ©cnicos especÃ­ficos para facilitar la implementaciÃ³n.

  - type: dropdown
    id: feature-category
    attributes:
      label: CategorÃ­a de la funcionalidad
      description: Â¿En quÃ© Ã¡rea del backend se implementarÃ­a?
      options:
        - New API Endpoint
        - Database Schema/Migration
        - Authentication/Authorization
        - Middleware Enhancement
        - Performance Optimization
        - Developer Experience
        - Configuration/Environment
        - Documentation
        - Other
    validations:
      required: true

  - type: textarea
    id: feature-description
    attributes:
      label: DescripciÃ³n de la funcionalidad
      description: |
        DescripciÃ³n clara y tÃ©cnica de la funcionalidad propuesta.
        Incluye detalles de implementaciÃ³n si los tienes.
      placeholder: |
        Ejemplo: Implementar endpoint para paginaciÃ³n de usuarios con filtros avanzados
        - Endpoint: GET /api/users?page=1&limit=10&filter[role]=admin
        - Respuesta: { users: [...], pagination: { page, limit, total, pages } }
    validations:
      required: true

  - type: textarea
    id: use-case
    attributes:
      label: Caso de uso
      description: |
        Â¿Por quÃ© es necesaria esta funcionalidad? Â¿QuÃ© problema resuelve?
      placeholder: |
        Esta funcionalidad permitirÃ­a a los clientes frontend paginar eficientemente
        grandes listas de usuarios sin cargar todos los registros de una vez.
    validations:
      required: true

  - type: textarea
    id: api-design
    attributes:
      label: DiseÃ±o de API propuesto
      description: |
        Si es un nuevo endpoint, describe la estructura de la API
      placeholder: |
        **MÃ©todo:** POST
        **Endpoint:** /api/auth/refresh
        **Headers:** Authorization: Bearer <refresh_token>
        **Request body:** {}
        **Response:** { accessToken: "...", expiresIn: 3600 }
        **Status codes:** 200 (success), 401 (invalid token), 500 (server error)
    validations:
      required: false

  - type: textarea
    id: database-impact
    attributes:
      label: Impacto en base de datos
      description: |
        Â¿Requiere cambios en el esquema de base de datos, nuevas tablas, migraciones?
      placeholder: |
        - Nueva tabla: refresh_tokens (id, user_id, token, expires_at, created_at)
        - MigraciÃ³n necesaria para agregar Ã­ndices en user_id y token
    validations:
      required: false

  - type: textarea
    id: typescript-considerations
    attributes:
      label: Consideraciones TypeScript
      description: |
        Â¿QuÃ© tipos/interfaces nuevos se necesitarÃ­an?
      placeholder: |
        interface RefreshTokenRequest {
          refreshToken: string;
        }
        
        interface RefreshTokenResponse {
          accessToken: string;
          expiresIn: number;
        }
    validations:
      required: false

  - type: textarea
    id: alternatives
    attributes:
      label: Alternativas consideradas
      description: |
        Â¿Has considerado otras formas de implementar esta funcionalidad?
    validations:
      required: false
